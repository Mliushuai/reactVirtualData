import React, {Component, PropTypes} from 'react'; // 引入了React和PropTypes// 引入 ECharts 主模块import echarts from 'echarts/lib/echarts';// 引入折线图import 'echarts/lib/chart/line';import 'echarts/lib/chart/gauge'// 标题插件import 'echarts/lib/component/title';import 'echarts/lib/component/tooltip';import 'echarts/lib/component/dataZoom';import 'echarts/lib/component/graphic';import 'echarts/lib/component/grid';class EcharrtGauge extends Component {    constructor(props) {        super(props);        this.state = ({            tuyData: "0"        })    }    setGaugeOption(max, min, xLength, GaugeSize) {        let _size = GaugeSize + '%'        return {            tooltip: {                formatter: "{a} <br/>{b} : {c}%"            },            toolbox: {                feature: {                    restore: {},                    saveAsImage: {}                }            },            title: {                show: true,                offsetCenter: [10, '10%'], // x, y，单位px                textStyle: {                    color: '#hhh',                    fontSize: 10                }            },            splitLine: {           // 分隔线                length: 25,         // 属性length控制线长                lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式                    // width: 2,                    color: '#f00',                    // shadowColor : '#f00', //默认透明                    // shadowBlur: 10                }            },            series: [                {                    name: '一线路',                    type: 'gauge',                    //仪表盘大小                    radius: _size,                    min: min,                    max: max,                    //结束位置向左偏移度数                    startAngle: 180,                    endAngle: 0,                    //刻度个数 最小值为1，根据刻度值自动算车刻度比例                    splitNumber: xLength,                    detail: {formatter: '{value}°C'},                    //仪表盘控制配置项                    axisLine: {            // 坐标轴线                        lineStyle: {       // 属性lineStyle控制线条样式                            /**                             * 控制仪表盘刻度颜色                             */                            color: [[0.6, '#53dfff'], [0.9, '#311de9'], [1, '#ff3b69']],                            width: 5,                            // shadowColor: '#fff', //默认透明                            // shadowBlur: 10                        }                    },                    pointer: {                        //这个show属性好像有问题，因为在这次开发中，需要去掉指正，我设置false的时候，还是显示指针，估计是BUG吧，我用的echarts-3.2.3；希望改进。最终，我把width属性设置为0，成功搞定！                        show: true,                        //指针长度                        length: '90%',                        width: 4,                    },                    axisTick: {            // 坐标轴小标记                        length: 4,        // 属性length控制线长                        lineStyle: {       // 属性lineStyle控制线条样式                            color: [[0.3, '#f00'], [0.3, '#ff0'], [0.82, '#0f0'], [1, '#00f']],                        }                    },                    data: [                        {                            value: 50,                            name: '温度',                        }                    ],                }            ]        }    }    setEcharts() {        const {max, min, xLength, GaugeSize} = this.props;        let myChart = echarts.init(this.refs.gauge);        let options = this.setGaugeOption(max, min, xLength, GaugeSize)        //设置坐标值        options.series[0].data[0].value = this.state.tuyData        myChart.setOption(options);    }    componentDidMount() {        this.setEcharts()    }    // componentDidUpdate() {    //     this.setEcharts()    // }    hasData = () => {        let data = Math.random() * 100        let fieedData = data.toFixed(2)        this.setState({            tuyData: fieedData        })    }    render() {        return (            <div ref="gauge" style={{width: 400, height: 400,margin:"0 auto"}}></div>        )    }}export default EcharrtGauge